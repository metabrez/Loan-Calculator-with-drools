package com.osa.loan.calc;
import com.osa.loan.calc.model.*;
import java.util.*;
import java.time.*;
import org.slf4j.Logger;

dialect  "java"

global Logger log;
global Verdict verdict;

rule "34: The customer is not old enough"
no-loop true
salience 50
    when
        $results : Results(oldEnough == false)
    then
        verdict.addCritical();
end

rule "35: Customer too old"
no-loop true
salience 50
    when
        $person : Person(married == false)
        $results : Results(tooOld == true)
    then
        verdict.addCritical();
end

rule "36: The client and the spouse are too old"
no-loop true
salience 49
    when
        $person : Person(married == true, children == 0)
        $results : Results(tooOld == true, partnerTooOld == true)
    then
        verdict.addCritical();
end

rule "37: Client without income"
no-loop true
salience 49
    when
        $person : Person(married == false)
        $results: Results(unemployed == true)
    then
        verdict.addCritical();
end

rule "38: A client with a spouse without income"
no-loop true
salience 49
    when
        $person : Person(married == true)
        $results: Results(unemployed == true, partnerUnemployed == true)
    then
        verdict.addCritical();
end

rule "39: It is not enough for bills"
no-loop true
salience 48
    when
        $person : Person(married == false)
        $results: Results(ableToPayBills == false)
    then
        verdict.addCritical();
end

rule "40: He can not afford bills with his wife"
no-loop true
salience 48
    when
        $person : Person(married == true)
        $results: Results(ableToPayBills == false, ableToPayBillsWithPartner == false)
    then
        verdict.addCritical();
end

rule "41: Not enough for installments"
no-loop true
salience 47
    when
        $person : Person(married == false)
        $results: Results(ableToPayBills == true, ableToPayInstallments == false)
    then
        verdict.addCritical();
end

rule "42: It is not enough for installments with your spouse"
no-loop true
salience 47
    when
        $person : Person(married == true)
        $results: Results(ableToPayBillsWithPartner == true, ableToPayInstallments == false, ableToPayInstallmentsWithPartner == false)
    then
        verdict.addCritical();
end

rule "43: Without a spouse, he can not"
no-loop true
salience 40
    when
        $person : Person(married == true)
        $results : Results(ableToPayBills == false, ableToPayBillsWithPartner == true)
    then
        verdict.addWarning()
            .addWarning();
end

rule "44: Without a spouse, he can not"
no-loop true
salience 39
    when
        $person : Person(married == true)
        $results : Results(ableToPayBills == true, ableToPayInstallments == false, ableToPayInstallmentsWithPartner == true)
    then
        verdict.addWarning();
end

rule "45: He can pay bills himself"
no-loop true
salience 38
    when
        $results : Results(ableToPayBills == true)
    then
        verdict.addPositive();
end

rule "46: He can pay installments himself"
no-loop true
salience 37
    when
        $results : Results(ableToPayInstallments == true)
    then
        verdict.addPositive()
            .addPositive();
end

rule "47: It will pay off the whole"
no-loop true
salience 36
    when
        $results : Results(willClientLiveLongEnough == true)
    then
        verdict.addPositive()
            .addPositive();
end

rule "48: He will pay the whole with his spouse"
no-loop true
salience 35
    when
        $results : Results(willClientLiveLongEnough == false, willClientsPartnerLiveLongEnough == true)
    then
        verdict.addPositive()
            .addWarning();
end

rule "49: Children can pay the rest"
no-loop true
salience 34
    when
        $results : Results(willClientLiveLongEnough == false, childCanCarryOnAfterClient == true)
    then
        verdict.addPositive()
            .addWarning()
            .addWarning();
end

rule "50: Children can pay the rest"
no-loop true
salience 33
    when
        $results : Results(!willClientLiveLongEnough && !willClientsPartnerLiveLongEnough && (childCanCarryOnAfterClient || childCanCarryOnAfterPartner))
    then
        verdict.addPositive()
            .addWarning()
            .addWarning()
            .addWarning();
end

rule "51: You can not pay it to the end"
no-loop true
salience 33
    when
        $results : Results(willClientLiveLongEnough == false,
                           willClientsPartnerLiveLongEnough == false,
                           childCanCarryOnAfterClient == false,
                           childCanCarryOnAfterPartner == false)
    then
        verdict.addCritical();
end

rule "52: Loan in PLN"
no-loop true
salience 32
    when
        $person : Person()
        $loan : Loan(currency == LoanCurrency.PLN) from $person.loan
    then
        verdict.addPositive();
end

rule "53: Foreign currency loan"
no-loop true
salience 32
    when
        $person : Person()
        $loan : Loan(currency != LoanCurrency.PLN) from $person.loan
    then
        verdict.addWarning();
end